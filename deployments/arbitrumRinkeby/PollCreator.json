{
  "address": "0x7e3305D48489e43B7fBf318D575D5dF654EE175c",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "QUORUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bondingManager",
      "outputs": [
        {
          "internalType": "contract IBondingManager",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proposal",
          "type": "bytes"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "POLL_CREATION_COST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "QUOTA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "POLL_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_bondingManagerAddr",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "poll",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "proposal",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quorum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quota",
          "type": "uint256"
        }
      ],
      "name": "PollCreated",
      "type": "event"
    }
  ],
  "transactionHash": "0xcf19279dd7d2ba2ec1160c41c92dfb25fb35800a9eda3ee09cc6a86decfaf982",
  "receipt": {
    "to": null,
    "from": "0xB5Af4138f0f33be0D6414Eb25271B9C2Dc245fb5",
    "contractAddress": "0x7e3305D48489e43B7fBf318D575D5dF654EE175c",
    "transactionIndex": 0,
    "gasUsed": "3232729",
    "logsBloom": "0x
    "blockHash": "0xfcc5941a4cf6ea020555ef16188b6430a709415c1d6514dbb5c5decd1cd5a075",
    "transactionHash": "0xcf19279dd7d2ba2ec1160c41c92dfb25fb35800a9eda3ee09cc6a86decfaf982",
    "logs": [],
    "blockNumber": 8912084,
    "cumulativeGasUsed": "71149",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe42229d764F673EB3FB8B9a56016C2a4DA45ffd7"
  ],
  "numDeployments": 2,
  "solcInputHash": "52de547bf900d68228bf4e4cdfe1d28d",
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.22be8592\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"QUORUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bondingManager\",\"outputs\":[{\"internalType\":\"contract IBondingManager\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proposal\",\"type\":\"bytes\"}],\"name\":\"createPoll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"POLL_CREATION_COST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"QUOTA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"POLL_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bondingManagerAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poll\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"proposal\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quorum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quota\",\"type\":\"uint256\"}],\"name\":\"PollCreated\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"createPoll(bytes)\":{\"params\":{\"_proposal\":\"The IPFS multihash for the proposal.\"}}}},\"userdoc\":{\"methods\":{\"createPoll(bytes)\":{\"notice\":\"Create a poll if caller has POLL_CREATION_COST LPT stake (own stake or stake delegated to it).\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/polling/PollCreator.sol\":\"PollCreator\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/polling/Poll.sol\":{\"content\":\"pragma solidity ^0.5.11;\\n\\ncontract Poll {\\n    // The block at which the poll ends and votes can no longer be submitted.\\n    uint256 public endBlock;\\n\\n    // Vote is emitted when an account submits a vote with 'choiceID'.\\n    // This event can be indexed to tally all votes for each choiceID\\n    event Vote(address indexed voter, uint256 choiceID);\\n\\n    modifier isActive() {\\n        require(block.number <= endBlock, \\\"poll is over\\\");\\n        _;\\n    }\\n\\n    constructor(uint256 _endBlock) public {\\n        endBlock = _endBlock;\\n    }\\n\\n    /**\\n     * @dev Vote for the poll's proposal.\\n     *      Reverts if the poll period is over.\\n     * @param _choiceID the ID of the option to vote for\\n     */\\n    function vote(uint256 _choiceID) external isActive {\\n        emit Vote(msg.sender, _choiceID);\\n    }\\n\\n    /**\\n     * @dev Destroy the Poll contract after the poll has finished\\n     *      Reverts if the poll is still active\\n     */\\n    function destroy() external {\\n        require(block.number > endBlock, \\\"poll is active\\\");\\n        selfdestruct(msg.sender);\\n    }\\n}\\n\",\"keccak256\":\"0x745486b129454d017d03f2aafce029760215f95829c996c7f4e5564f27886ed8\"},\"contracts/polling/PollCreator.sol\":{\"content\":\"pragma solidity ^0.5.11;\\n\\nimport \\\"./Poll.sol\\\";\\n\\ninterface IBondingManager {\\n    function transcoderTotalStake(address _addr) external view returns (uint256);\\n\\n    function pendingStake(address _addr, uint256 _endRound) external view returns (uint256);\\n}\\n\\ncontract PollCreator {\\n    // 33.33%\\n    uint256 public constant QUORUM = 333300;\\n    // 50%\\n    uint256 public constant QUOTA = 500000;\\n    // 10 rounds\\n    uint256 public constant POLL_PERIOD = 10 * 5760;\\n    uint256 public constant POLL_CREATION_COST = 100 * 1 ether;\\n\\n    IBondingManager public bondingManager;\\n\\n    event PollCreated(address indexed poll, bytes proposal, uint256 endBlock, uint256 quorum, uint256 quota);\\n\\n    constructor(address _bondingManagerAddr) public {\\n        bondingManager = IBondingManager(_bondingManagerAddr);\\n    }\\n\\n    /**\\n     * @notice Create a poll if caller has POLL_CREATION_COST LPT stake (own stake or stake delegated to it).\\n     * @param _proposal The IPFS multihash for the proposal.\\n     */\\n    function createPoll(bytes calldata _proposal) external {\\n        require(\\n            // pendingStake() ignores the second arg\\n            bondingManager.pendingStake(msg.sender, 0) >= POLL_CREATION_COST ||\\n                bondingManager.transcoderTotalStake(msg.sender) >= POLL_CREATION_COST,\\n            \\\"PollCreator#createPoll: INSUFFICIENT_STAKE\\\"\\n        );\\n\\n        uint256 endBlock = block.number + POLL_PERIOD;\\n        Poll poll = new Poll(endBlock);\\n\\n        emit PollCreated(address(poll), _proposal, endBlock, QUORUM, QUOTA);\\n    }\\n}\\n\",\"keccak256\":\"0x590ab3c3225f546fc769ec03027eb0b87ca9b1c568b0e74f47f6683698b15e21\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161061c38038061061c8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556105b7806100656000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632e80d9b614610067578063426eae45146100815780634d2942ab146100a55780635359fbc014610117578063a502303b1461011f578063cb61e46e14610127575b600080fd5b61006f61012f565b60408051918252519081900360200190f35b610089610136565b604080516001600160a01b039092168252519081900360200190f35b610115600480360360208110156100bb57600080fd5b8101906020810181356401000000008111156100d657600080fd5b8201836020820111156100e857600080fd5b8035906020019184600183028401116401000000008311171561010a57600080fd5b509092509050610145565b005b61006f61035f565b61006f61036c565b61006f610373565b620515f481565b6000546001600160a01b031681565b6000805460408051634e85963d60e11b815233600482015260248101939093525168056bc75e2d63100000926001600160a01b0390921691639d0b2c7a916044808301926020929190829003018186803b1580156101a257600080fd5b505afa1580156101b6573d6000803e3d6000fd5b505050506040513d60208110156101cc57600080fd5b50511015806102585750600054604080516327be77e560e21b8152336004820152905168056bc75e2d63100000926001600160a01b031691639ef9df94916024808301926020929190829003018186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d602081101561025357600080fd5b505110155b6102935760405162461bcd60e51b815260040180806020018281038252602a815260200180610559602a913960400191505060405180910390fd5b600061e100430190506000816040516102ab90610379565b90815260405190819003602001906000f0801580156102ce573d6000803e3d6000fd5b509050806001600160a01b03167f8afbc4e1826cefcfc1e64fd5ff7d8484e700867fdbe36e9b6db047c010a6229e858585620515f46207a12060405180806020018581526020018481526020018381526020018281038252878782818152602001925080828437600083820152604051601f909101601f19169092018290039850909650505050505050a250505050565b68056bc75e2d6310000081565b6207a12081565b61e10081565b6101d2806103878339019056fe608060405234801561001057600080fd5b506040516101d23803806101d28339818101604052602081101561003357600080fd5b505160005561018b806100476000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f14610046578063083c63231461006557806383197ef01461007f575b600080fd5b6100636004803603602081101561005c57600080fd5b5035610087565b005b61006d610106565b60408051918252519081900360200190f35b61006361010c565b6000544311156100cd576040805162461bcd60e51b815260206004820152600c60248201526b3837b6361034b99037bb32b960a11b604482015290519081900360640190fd5b60408051828152905133917ff668ead05c744b9178e571d2edb452e72baf6529c8d72160e64e59b50d865bd0919081900360200190a250565b60005481565b6000544311610153576040805162461bcd60e51b815260206004820152600e60248201526d706f6c6c2069732061637469766560901b604482015290519081900360640190fd5b33fffea265627a7a72315820030d4ccd58e03ab2b59cf24b943e793300efd59c00f7528ae973ab9bcfda1de664736f6c634300050b0032506f6c6c43726561746f7223637265617465506f6c6c3a20494e53554646494349454e545f5354414b45a265627a7a723158200c169948ffee3a253f9d5c5d3457f74b2cf529b46f0133224af85492edc3744364736f6c634300050b0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80632e80d9b614610067578063426eae45146100815780634d2942ab146100a55780635359fbc014610117578063a502303b1461011f578063cb61e46e14610127575b600080fd5b61006f61012f565b60408051918252519081900360200190f35b610089610136565b604080516001600160a01b039092168252519081900360200190f35b610115600480360360208110156100bb57600080fd5b8101906020810181356401000000008111156100d657600080fd5b8201836020820111156100e857600080fd5b8035906020019184600183028401116401000000008311171561010a57600080fd5b509092509050610145565b005b61006f61035f565b61006f61036c565b61006f610373565b620515f481565b6000546001600160a01b031681565b6000805460408051634e85963d60e11b815233600482015260248101939093525168056bc75e2d63100000926001600160a01b0390921691639d0b2c7a916044808301926020929190829003018186803b1580156101a257600080fd5b505afa1580156101b6573d6000803e3d6000fd5b505050506040513d60208110156101cc57600080fd5b50511015806102585750600054604080516327be77e560e21b8152336004820152905168056bc75e2d63100000926001600160a01b031691639ef9df94916024808301926020929190829003018186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d602081101561025357600080fd5b505110155b6102935760405162461bcd60e51b815260040180806020018281038252602a815260200180610559602a913960400191505060405180910390fd5b600061e100430190506000816040516102ab90610379565b90815260405190819003602001906000f0801580156102ce573d6000803e3d6000fd5b509050806001600160a01b03167f8afbc4e1826cefcfc1e64fd5ff7d8484e700867fdbe36e9b6db047c010a6229e858585620515f46207a12060405180806020018581526020018481526020018381526020018281038252878782818152602001925080828437600083820152604051601f909101601f19169092018290039850909650505050505050a250505050565b68056bc75e2d6310000081565b6207a12081565b61e10081565b6101d2806103878339019056fe608060405234801561001057600080fd5b506040516101d23803806101d28339818101604052602081101561003357600080fd5b505160005561018b806100476000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f14610046578063083c63231461006557806383197ef01461007f575b600080fd5b6100636004803603602081101561005c57600080fd5b5035610087565b005b61006d610106565b60408051918252519081900360200190f35b61006361010c565b6000544311156100cd576040805162461bcd60e51b815260206004820152600c60248201526b3837b6361034b99037bb32b960a11b604482015290519081900360640190fd5b60408051828152905133917ff668ead05c744b9178e571d2edb452e72baf6529c8d72160e64e59b50d865bd0919081900360200190a250565b60005481565b6000544311610153576040805162461bcd60e51b815260206004820152600e60248201526d706f6c6c2069732061637469766560901b604482015290519081900360640190fd5b33fffea265627a7a72315820030d4ccd58e03ab2b59cf24b943e793300efd59c00f7528ae973ab9bcfda1de664736f6c634300050b0032506f6c6c43726561746f7223637265617465506f6c6c3a20494e53554646494349454e545f5354414b45a265627a7a723158200c169948ffee3a253f9d5c5d3457f74b2cf529b46f0133224af85492edc3744364736f6c634300050b0032",
  "devdoc": {
    "methods": {
      "createPoll(bytes)": {
        "params": {
          "_proposal": "The IPFS multihash for the proposal."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createPoll(bytes)": {
        "notice": "Create a poll if caller has POLL_CREATION_COST LPT stake (own stake or stake delegated to it)."
      }
    }
  }
}